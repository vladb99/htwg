➜  aufgabe5 git:(master) ✗ make notenspiegel
g++  -g -W -Wall -Weffc++ -Wold-style-cast -std=c++11   -c -o notenspiegel.o notenspiegel.cpp
g++  -g -W -Wall -Weffc++ -Wold-style-cast -std=c++11   -c -o benotung.o benotung.cpp
g++  -g -W -Wall -Weffc++ -Wold-style-cast -std=c++11   -c -o fachnote.o fachnote.cpp
g++  -g -W -Wall -Weffc++ -Wold-style-cast -std=c++11   -c -o fachnoten_liste.o fachnoten_liste.cpp
g++  -g -W -Wall -Weffc++ -Wold-style-cast -std=c++11 -o notenspiegel notenspiegel.o benotung.o fachnote.o fachnoten_liste.o
➜  aufgabe5 git:(master) ✗ ./notenspiegel
Fach und Note zwischen 10 und 50 eingeben (Ende mit Strg-D):
Mathe2 10
Sypr 20
Digi 30

NOTENSPIEGEL
Digi  	3,0	bestanden
Sypr  	2,0	bestanden
Mathe2	1,0	mit Bestnote bestanden
➜  aufgabe5 git:(master) ✗ valgrind ./notenspiegel
==19463== Memcheck, a memory error detector
==19463== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19463== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==19463== Command: ./notenspiegel
==19463== 
Fach und Note zwischen 10 und 50 eingeben (Ende mit Strg-D):
Mathe2 10
Sypr 20
Digi 30

NOTENSPIEGEL
Digi  	3,0	bestanden
Sypr  	2,0	bestanden
Mathe2	1,0	mit Bestnote bestanden
==19463== 
==19463== HEAP SUMMARY:
==19463==     in use at exit: 0 bytes in 0 blocks
==19463==   total heap usage: 19 allocs, 19 frees, 75,200 bytes allocated
==19463== 
==19463== All heap blocks were freed -- no leaks are possible
==19463== 
==19463== For counts of detected and suppressed errors, rerun with: -v
==19463== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
➜  aufgabe5 git:(master) ✗ make cppcheck
cppcheck --enable=warning,style --std=c++11 notenspiegel.cpp benotung.cpp fachnote.cpp fachnoten_liste.cpp
Checking benotung.cpp ...
1/4 files checked 13% done
Checking fachnote.cpp ...
2/4 files checked 17% done
Checking fachnoten_liste.cpp ...
3/4 files checked 43% done
Checking notenspiegel.cpp ...
[notenspiegel.cpp:80]: (style) Consider using std::accumulate algorithm instead of a raw loop.
4/4 files checked 100% done
➜  aufgabe5 git:(master) ✗ valgrind ./notenspiegel < notenspiegel-in.txt
==19650== Memcheck, a memory error detector
==19650== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19650== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==19650== Command: ./notenspiegel
==19650== 
Fach und Note zwischen 10 und 50 eingeben (Ende mit Strg-D):

NOTENSPIEGEL
Systemmodellierung 	5,0	nicht bestanden
Programmiertechnik1	2,3	bestanden
Digitaltechnik     	1,0	mit Bestnote bestanden
Mathematik1        	3,7	bestanden
==19650== 
==19650== HEAP SUMMARY:
==19650==     in use at exit: 0 bytes in 0 blocks
==19650==   total heap usage: 27 allocs, 27 frees, 82,581 bytes allocated
==19650== 
==19650== All heap blocks were freed -- no leaks are possible
==19650== 
==19650== For counts of detected and suppressed errors, rerun with: -v
==19650== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
➜  aufgabe5 git:(master) ✗ ./notenspiegel < notenspiegel-in.txt > out.txt
Fach und Note zwischen 10 und 50 eingeben (Ende mit Strg-D):
➜  aufgabe5 git:(master) ✗ diff -Z notenspiegel-out.txt out.txt
➜  aufgabe5 git:(master) ✗ 



Antwort:

Welche Memberfunktionen erzeugt der Compiler zusätzlich implizit in benotung? Implementiert er die in diesem Fall korrekt?
Copy- und Move-Konstruktoren, Destruktor, sowie Copy- und Move-Zuweisungen ergänzt der Compiler automatisch.
Ja, er implementiert sie korrekt, da keine der fünf explizit implementiert wurde. (Rule of five)

